{
  "version": 3,
  "sources": ["../../src/day01/index.ts"],
  "sourcesContent": ["import run from \"aocrunner\"\n\nconst parseInput = (rawInput: string) => rawInput.split(\"\\n\").map(Number)\n\nconst part1 = (rawInput: string) => {\n  const input = parseInput(rawInput)\n  let prev = -Infinity\n  let count = 0\n\n  for (const item of input) {\n    if (item > prev) {\n      count++\n    }\n    prev = item\n  }\n\n  return count - 1\n}\n\nconst part2 = (rawInput: string) => {\n  const input = parseInput(rawInput)\n  const threes = []\n\n  for (let i = 0; i < input.length; i++) {\n    threes.push(input[i] + (input[i + 1] || 0) + (input[i + 2] || 0))\n  }\n\n  let prev = -Infinity\n  let count = 0\n\n  for (const item of threes) {\n    if (item > prev) {\n      count++\n    }\n    prev = item\n  }\n\n  return count - 1\n}\n\nrun({\n  part1: {\n    tests: [\n      {\n        input: `\n          199\n          200\n          208\n          210\n          200\n          207\n          240\n          269\n          260\n          263\n        `,\n        expected: 7,\n      },\n    ],\n    solution: part1,\n  },\n  part2: {\n    tests: [\n      {\n        input: `\n          199\n          200\n          208\n          210\n          200\n          207\n          240\n          269\n          260\n          263\n        `,\n        expected: 5,\n      },\n    ],\n    solution: part2,\n  },\n  trimTestInputs: true,\n})\n"],
  "mappings": "AAAA;AAEA,MAAM,aAAa,CAAC,aAAqB,SAAS,MAAM,MAAM,IAAI;AAElE,MAAM,QAAQ,CAAC,aAAqB;AAClC,QAAM,QAAQ,WAAW;AACzB,MAAI,OAAO;AACX,MAAI,QAAQ;AAEZ,aAAW,QAAQ,OAAO;AACxB,QAAI,OAAO,MAAM;AACf;AAAA;AAEF,WAAO;AAAA;AAGT,SAAO,QAAQ;AAAA;AAGjB,MAAM,QAAQ,CAAC,aAAqB;AAClC,QAAM,QAAQ,WAAW;AACzB,QAAM,SAAS;AAEf,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,WAAO,KAAK,MAAM,KAAM,OAAM,IAAI,MAAM,KAAM,OAAM,IAAI,MAAM;AAAA;AAGhE,MAAI,OAAO;AACX,MAAI,QAAQ;AAEZ,aAAW,QAAQ,QAAQ;AACzB,QAAI,OAAO,MAAM;AACf;AAAA;AAEF,WAAO;AAAA;AAGT,SAAO,QAAQ;AAAA;AAGjB,IAAI;AAAA,EACF,OAAO;AAAA,IACL,OAAO;AAAA,MACL;AAAA,QACE,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAYP,UAAU;AAAA;AAAA;AAAA,IAGd,UAAU;AAAA;AAAA,EAEZ,OAAO;AAAA,IACL,OAAO;AAAA,MACL;AAAA,QACE,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAYP,UAAU;AAAA;AAAA;AAAA,IAGd,UAAU;AAAA;AAAA,EAEZ,gBAAgB;AAAA;",
  "names": []
}
